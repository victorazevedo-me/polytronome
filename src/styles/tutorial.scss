@mixin dimUnfocused() {
	opacity: 0.1;
	filter: grayscale(1);
}

@mixin butShow($class: '') {
	#{$class} {
		opacity: 1;
	}
}

/* 
 * EASY 
 */

&.testBeats,
&.explainWheel {
	.menu,
	.tempo,
	.clicks,
	.bottom-buttons,
	.layers-table .ls-row > div:not(:first-child) {
		@include dimUnfocused();
	}
}

&.testLaunch {
	@include butShow($class: '.start');

	.menu,
	.tempo,
	.clicks,
	.layers-table,
	.bottom-buttons .randomize {
		@include dimUnfocused();
	}
}

&.showTempo {
	@include butShow($class: '.tempo');

	.menu,
	.clicks,
	.bottom-buttons,
	.layers-table {
		@include dimUnfocused();
	}
}

&.clickMenu {
	aside,
	.tempo,
	.clicks,
	.bottom-buttons,
	.layers-table {
		@include dimUnfocused();
	}
}

/* 
 * ADVANCED 
 */

$stages: (
	'showNotes': 'ls-note',
	'showWaveType': 'ls-type',
	'beatsAgain': 'ls-beats',
	'showDuration': 'ls-effects',
	'showRelease': 'ls-effects',
	'showVolume': 'ls-volume',
);

@mixin advancedStagesDim($focus: '') {
	aside,
	.tempo,
	.logo,
	.clicks,
	.bottom-buttons,
	.layers-table .ls-row > div:not(#{$focus}) {
		@include dimUnfocused();
	}
}

@each $stage, $class in $stages {
	&.#{$stage} {
		@include advancedStagesDim($focus: '.#{$class}');
	}
}

&.showDuration .ls-effects button:last-child,
&.showRelease .ls-effects button:first-child {
	opacity: 0.1;
	filter: grayscale(1);
}
